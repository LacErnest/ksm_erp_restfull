<<<<<<< HEAD:stock/migrations/0001_initial.py
# Generated by Django 3.0.7 on 2020-08-21 09:32
=======
# Generated by Django 3.0.7 on 2020-08-30 06:25
>>>>>>> e50fe4af2c5e706961ba3369d6c568cc3c7ce4ea:stock/migrations/0001_migration_stock.py

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import stock.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD:stock/migrations/0001_initial.py
        ('company', '0001_initial'),
        ('product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gocom', '0001_initial'),
=======
        ('product', '0001_migration_product'),
        ('gocom', '0001_migration_gocom'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('company', '0001_migration_company'),
>>>>>>> e50fe4af2c5e706961ba3369d6c568cc3c7ce4ea:stock/migrations/0001_migration_stock.py
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleStore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default=stock.models.ArticleStore.generate_code, max_length=255, null=True)),
                ('stock_max', models.PositiveIntegerField(null=True)),
                ('stock_min', models.PositiveIntegerField(null=True)),
                ('replenishment_level', models.PositiveIntegerField(null=True)),
                ('unavailable', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('physical_stock', models.PositiveIntegerField(null=True)),
                ('theoric_stock', models.PositiveIntegerField(null=True)),
                ('cumulative_entry', models.PositiveIntegerField(default=1, null=True)),
                ('cumulative_output', models.PositiveIntegerField(default=1, null=True)),
                ('manufactury_date', models.DateField(auto_now_add=True, verbose_name='Date de fabrication')),
                ('expiry_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'expiration")),
                ('last_inventory_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de dernier inventaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='article_stores', to='product.Product', verbose_name='Produit associé')),
                ('structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='article_stores', to='company.Structure', verbose_name='Structure associée')),
            ],
            options={
                'verbose_name_plural': 'Articles en Stock',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
<<<<<<< HEAD:stock/migrations/0001_initial.py
                ('code', models.CharField(default=stock.models.Inventory.generate_code, max_length=15, unique=True)),
                ('fox', models.CharField(blank=True, max_length=15)),
                ('inventory_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
=======
                ('code', models.CharField(default=stock.models.Inventory.generate_code, max_length=30, unique=True)),
                ('fox', models.CharField(blank=True, max_length=15)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
>>>>>>> e50fe4af2c5e706961ba3369d6c568cc3c7ce4ea:stock/migrations/0001_migration_stock.py
                ('open_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ouverture inventaire")),
                ('end_date', models.DateTimeField(verbose_name='Date de fermeture inventaire')),
                ('validation_date', models.DateTimeField(verbose_name='Date de validation inventaire')),
                ('validation_state', models.CharField(choices=[(0, 'Draft'), (1, 'Pending'), (3, 'Canceled'), (2, 'Succeeded')], default=0, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('article_store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventories', to='stock.ArticleStore', verbose_name='Article associé')),
            ],
            options={
                'verbose_name_plural': 'Inventaires',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='SourceMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=stock.models.SourceMovement.generate_code, max_length=30, unique=True)),
                ('wording', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('apply_as_input', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('output_application', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('sequence_number', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('business_transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='source_movements', to='gocom.BusinessTransaction', verbose_name='Transaction associée')),
                ('structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='source_movements', to='company.Structure', verbose_name='Structure associée')),
            ],
            options={
                'verbose_name_plural': 'Source du mouvement',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_ref', models.CharField(default=stock.models.StockMovement.generate_code, max_length=30, unique=True)),
                ('object_ref', models.CharField(default=stock.models.StockMovement.generate_code_object, max_length=30, unique=True)),
                ('movement_object_ref', models.CharField(default=stock.models.StockMovement.generate_code_movement, max_length=30, unique=True)),
                ('label', models.CharField(max_length=255, null=True)),
                ('notes', models.TextField(max_length=255, null=True)),
                ('movement_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de mouvement')),
                ('last_inventory_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de dernier inventaire')),
                ('exercice', models.CharField(default=stock.models.StockMovement.default_exercise, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_movement_initiator', to=settings.AUTH_USER_MODEL)),
                ('source_movement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_movements', to='stock.SourceMovement', verbose_name='Source du mouvement associée')),
                ('structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stock_movements', to='company.Structure', verbose_name='Structure associée')),
            ],
            options={
                'verbose_name_plural': 'Mouvement de Stock',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MovementDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de mouvement')),
                ('entree', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('sortie', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('sens_movement', models.PositiveIntegerField(choices=[(1, 'In'), (0, 'Out')], default=1)),
                ('quantity_moved', models.PositiveIntegerField(null=True)),
                ('pre_movement_balance', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('article_store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movement_details', to='stock.ArticleStore', verbose_name='Article associé')),
                ('stock_movement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movement_details', to='stock.StockMovement', verbose_name='Mouvement de stock associé')),
            ],
            options={
                'verbose_name_plural': "Détails d'un mouvement pour un article",
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=stock.models.InventoryType.generate_code, max_length=30, unique=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inventorytypes', to='company.Structure', verbose_name='Structure associée')),
            ],
            options={
                'verbose_name_plural': "Types d'inventaire",
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryMotif',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=stock.models.InventoryMotif.generate_code, max_length=30, unique=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inventorymotifs', to='company.Structure', verbose_name='Structure associée')),
            ],
            options={
                'verbose_name_plural': "Motifs d'inventaire",
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_stock_quantity', models.PositiveIntegerField(null=True, verbose_name='Ancienne quantité')),
                ('new_stock_quantity', models.PositiveIntegerField(null=True, verbose_name='Nouvelle quantité')),
                ('gap', models.IntegerField(null=True, verbose_name='Ecart')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('article_store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventorie_details', to='stock.ArticleStore', verbose_name='Article associé')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventorie_details', to='stock.Inventory', verbose_name='Inventaire associé')),
            ],
            options={
                'verbose_name_plural': "Détails d'inventaire pour un article en stock",
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='inventory_motif',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventories', to='stock.InventoryMotif', verbose_name='Motif inventaire associé'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='inventory_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventories', to='stock.InventoryType', verbose_name='Type inventaire associé'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='structure',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inventories', to='company.Structure', verbose_name='Structure associée'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_initiator', to=settings.AUTH_USER_MODEL),
        ),
    ]
