<<<<<<< HEAD:product/migrations/0001_initial.py
# Generated by Django 3.0.7 on 2020-08-21 09:32
=======
# Generated by Django 3.0.7 on 2020-08-14 12:57
>>>>>>> e50fe4af2c5e706961ba3369d6c568cc3c7ce4ea:product/migrations/0001_migration_product.py

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import product.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text="Personnaliser votre code, mais nous vous conseillons de nous laisser s'en charger", max_length=6, unique=True, validators=[product.models.Category.validate_code], verbose_name='Code')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=100)),
                ('image', models.ImageField(upload_to='images/')),
                ('update_code', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], help_text="Autoriser la mise à jour du code de la catégorie, lors d'un update", max_length=6, verbose_name='Mise à jour code')),
                ('update_code_product', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], help_text="Autoriser la mise à jour du code des produits associés à cette catégorie, lors d'un update", max_length=6, verbose_name='Mise à jour code produits')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('category_parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subcategories', to='product.Category', verbose_name='Catégorie Parente')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Catégories',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CategoryDescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification', models.CharField(max_length=100, unique=True, verbose_name='Spécification')),
                ('slug', models.SlugField(max_length=100)),
                ('description', models.TextField(max_length=200, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_descriptions', to='product.Category', verbose_name='Catégorie associée')),
            ],
            options={
                'verbose_name_plural': 'Description des catégories dans différentes langues',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conditioning',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=100)),
                ('description', models.TextField(max_length=200, verbose_name='Description')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantité')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_packagings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Packagings',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True, verbose_name='Code')),
                ('slug', models.SlugField(max_length=100)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('is_default', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3, validators=[product.models.Language.validate_is_default], verbose_name='Langue par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('categories', models.ManyToManyField(related_name='languages', through='product.CategoryDescription', to='product.Category')),
            ],
            options={
                'verbose_name_plural': 'Langues',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text="Personnaliser votre code, mais nous vous conseillons de nous laisser s'en charger", max_length=10, unique=True, validators=[product.models.Product.validate_code], verbose_name='Code')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('update_code', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3, verbose_name='Autoriser la mise à jour du code du produit')),
                ('slug', models.SlugField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='product.Category', verbose_name='Catégorie associée')),
                ('conditioning_purchase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_purchases', to='product.Conditioning', verbose_name="Conditioning associée à l'achat")),
                ('conditioning_sale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_sales', to='product.Conditioning', verbose_name='Conditioning associée à la vente')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Produits',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductTaxation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='Produit associée')),
            ],
            options={
                'verbose_name_plural': 'Taxes de produits',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=100)),
                ('value', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valeur')),
                ('description', models.TextField(max_length=200, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('products', models.ManyToManyField(related_name='taxes', through='product.ProductTaxation', to='product.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_taxes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Taxes',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='producttaxation',
            name='tax',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Tax', verbose_name='Taxe associée'),
        ),
        migrations.AddField(
            model_name='producttaxation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_product_taxations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProductIllustration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Image')),
                ('slug', models.SlugField(max_length=100)),
                ('video', models.FileField(upload_to='videos/', verbose_name='Vidéo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_illustrations', to='product.Product', verbose_name='Produit associée ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_product_illustrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Illustrations des produits',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100, verbose_name='Modèle')),
                ('slug', models.SlugField(max_length=100)),
                ('mark', models.CharField(max_length=100, verbose_name='Marque')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Poids')),
                ('conservation', models.TextField(max_length=200, verbose_name='Conservation')),
                ('origin', models.CharField(max_length=50, verbose_name='Origine')),
                ('composition', models.TextField(max_length=200, verbose_name='Composition')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='product_detail', to='product.Product', verbose_name='Produit associée')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_product_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Details de produits',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductDescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification', models.CharField(max_length=100, unique=True, verbose_name='Spécification')),
                ('slug', models.SlugField(max_length=100)),
                ('description', models.TextField(max_length=200, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Language', verbose_name='Langue associée')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_descriptions', to='product.Product', verbose_name='Produit associée')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_product_descriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Descriptions des produits dans différentes langues',
                'ordering': ['created_at'],
                'unique_together': {('language', 'product')},
            },
        ),
        migrations.AddField(
            model_name='language',
            name='products',
            field=models.ManyToManyField(related_name='languages', through='product.ProductDescription', to='product.Product'),
        ),
        migrations.AddField(
            model_name='language',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_language', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='categorydescription',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Language', verbose_name='Langue associée'),
        ),
        migrations.AddField(
            model_name='categorydescription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_category_descriptions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='producttaxation',
            unique_together={('product', 'tax')},
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prix moyen')),
                ('slug', models.SlugField(max_length=100)),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prix de revient')),
                ('unit_pricing', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prix unitaire')),
                ('percentage_expence', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Pourcentage des dépenses(transport...)')),
                ('percentage_margin_rate', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Taux de marge en pourcentage')),
                ('percentage_brand_taxes', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Pourcentage des taxes sur les marques')),
                ('half_wholesale_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prix du demi-gros')),
                ('wholesale_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prix de gros')),
                ('percentage_half_big_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Pourcentage prix demi-gros')),
                ('percentage_wholesale_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Pourcentage prix gros')),
                ('total_accumulated_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Prix total cumulé')),
                ('type_pricing', models.CharField(choices=[('SALE', 'SALE'), ('PURCHASE', 'PURCHASE')], max_length=10, verbose_name='Type de tarif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pricing', to='product.Product', verbose_name='Produit associée')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_pricing', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Tarifs',
                'ordering': ['created_at'],
                'unique_together': {('product', 'type_pricing')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='categorydescription',
            unique_together={('language', 'category')},
        ),
    ]
