# Generated by Django 3.0.7 on 2020-08-18 08:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import store.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleStore',
            fields=[
                ('article_store_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_max', models.PositiveIntegerField(null=True)),
                ('stock_min', models.PositiveIntegerField(null=True)),
                ('replenishment_level', models.PositiveIntegerField(null=True)),
                ('unavailable', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('physical_stock', models.PositiveIntegerField(null=True)),
                ('theoric_stock', models.PositiveIntegerField(null=True)),
                ('cumulative_entry', models.PositiveIntegerField(null=True)),
                ('cumulative_output', models.PositiveIntegerField(null=True)),
                ('manufactury_date', models.DateField(auto_now_add=True, verbose_name='Date de fabrication')),
                ('expiry_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'expiration")),
                ('last_inventory_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de dernier inventaire')),
                ('product', models.PositiveIntegerField(null=True)),
                ('structure', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('code', models.CharField(default=store.models.Inventory.generate_code, max_length=15, unique=True)),
                ('inventory_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('open_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ouverture inventaire")),
                ('end_date', models.DateTimeField(verbose_name='Date de fermeture inventaire')),
                ('validation_date', models.DateTimeField(verbose_name='Date de validation inventaire')),
                ('validation_state', models.CharField(choices=[('Draft', 'Draft'), ('Pending', 'Pending'), ('Cancelled', 'Canceled'), ('Succeeded', 'Succeeded')], default='Draft', max_length=20)),
                ('fox', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('article_store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.ArticleStore', verbose_name='Article associé')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryMotif',
            fields=[
                ('inventory_motif_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(default=store.models.InventoryMotif.generate_code, max_length=15, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryType',
            fields=[
                ('inventory_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(default=store.models.InventoryType.generate_code, max_length=15, unique=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
            ],
        ),
        migrations.CreateModel(
            name='SourceMovement',
            fields=[
                ('source_movement_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(default=store.models.SourceMovement.generate_code, max_length=15, unique=True)),
                ('wording', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('apply_as_input', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('output_application', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('sequence_number', models.PositiveIntegerField(null=True)),
                ('business_transaction', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('code_ref', models.CharField(default=store.models.StockMovement.generate_code, max_length=15, unique=True)),
                ('object_ref', models.CharField(default=store.models.StockMovement.generate_code, max_length=15, unique=True)),
                ('movement_object_ref', models.CharField(default=store.models.StockMovement.generate_code, max_length=15, unique=True)),
                ('label', models.CharField(max_length=255, null=True)),
                ('notes', models.CharField(max_length=255, null=True)),
                ('movement_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'expiration")),
                ('last_inventory_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de dernier inventaire')),
                ('stock_movement_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exercice', models.PositiveIntegerField(null=True)),
                ('store', models.PositiveIntegerField(null=True)),
                ('structure', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('source_movement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.SourceMovement', verbose_name='Source du mouvement associée')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='store_stock_movement', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MovementDetail',
            fields=[
                ('movement_detail_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('movement_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de mouvement')),
                ('entree', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('sortie', models.PositiveIntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('sens_movement', models.PositiveIntegerField(choices=[('In', 'In'), ('Out', 'Out')], default='In')),
                ('quantity_moved', models.PositiveIntegerField(null=True)),
                ('pre_movement_balance', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('article_store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.ArticleStore', verbose_name='Article associé')),
                ('stock_movement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.StockMovement', verbose_name='Mouvement de stock associé')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryDetail',
            fields=[
                ('inventory_detail_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('old_stock_quantity', models.PositiveIntegerField(null=True)),
                ('new_stock_quantity', models.PositiveIntegerField(null=True)),
                ('gap', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('article_store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.ArticleStore', verbose_name='Article associé')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.Inventory', verbose_name='Inventaire associé')),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='inventory_motif',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.InventoryMotif', verbose_name='Motif inventaire associé'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='inventory_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store.InventoryType', verbose_name='Type inventaire associé'),
        ),
    ]
